OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader PaintColors	%meta{string,help,"Painterly Texture Map Distortion"} %meta{string,label,"Paint Colors"} 
param	float	tm	0		%meta{float,min,0} %meta{float,max,100}  %read{9,44} %write{2147483647,-1}
param	float	offX	0.174999997		%meta{float,min,0} %meta{float,max,0.5}  %read{22,22} %write{2147483647,-1}
param	float	offY	0.275000006		%meta{float,min,0} %meta{float,max,0.5}  %read{37,37} %write{2147483647,-1}
param	float	offZ	0.25		%meta{float,min,0} %meta{float,max,0.5}  %read{50,50} %write{2147483647,-1}
param	float	scale	1		%meta{int,slider,1} %meta{float,min,0.00999999978} %meta{float,max,1000} %meta{float,slidermin,0.100000001} %meta{float,slidermax,100}  %read{4,4} %write{2147483647,-1}
oparam	color	c	0 0 0		%read{2147483647,-1} %write{72,72}
global	point	P	%read{4,4} %write{2147483647,-1}
global	float	u	%read{3,3} %write{2147483647,-1}
global	float	v	%read{3,3} %write{2147483647,-1}
local	int	complexity	%read{7,55} %write{0,0}
local	float	fluid_speed	%read{7,55} %write{1,1}
local	float	clrInt	%read{59,71} %write{2,2}
local	vector	p	%read{7,67} %write{3,55}
local	int	___325_i	%read{7,55} %write{6,55}
local	vector	___326_newp	%read{7,55} %write{7,55}
local	float	___326_s	%read{7,55} %write{7,55}
const	int	$const1	47		%read{0,0} %write{2147483647,-1}
const	float	$const2	108		%read{1,1} %write{2147483647,-1}
const	float	$const3	0.800000012		%read{2,2} %write{2147483647,-1}
const	int	$const4	0		%read{8,66} %write{2147483647,-1}
const	float	$const5	0		%read{3,3} %write{2147483647,-1}
const	int	$const6	1		%read{6,61} %write{2147483647,-1}
temp	int	$tmp1	%read{7,55} %write{7,55}
temp	int	$tmp2	%read{5,55} %write{6,55}
const	float	$const7	0.00100000005		%read{9,9} %write{2147483647,-1}
temp	float	$tmp3	%read{7,55} %write{7,55}
temp	float	$tmp4	%read{7,55} %write{7,55}
const	float	$const8	0.600000024		%read{13,41} %write{2147483647,-1}
temp	float	$tmp5	%read{7,55} %write{7,55}
temp	float	$tmp6	%read{7,55} %write{7,55}
const	int	$const9	2		%read{14,67} %write{2147483647,-1}
temp	float	$tmp7	%read{7,55} %write{7,55}
temp	float	$tmp8	%read{7,55} %write{7,55}
temp	float	$tmp9	%read{7,55} %write{7,55}
temp	float	$tmp10	%read{7,55} %write{7,55}
const	float	$const10	0.300000012		%read{18,46} %write{2147483647,-1}
temp	float	$tmp11	%read{7,55} %write{7,55}
temp	float	$tmp12	%read{7,55} %write{7,55}
temp	float	$tmp13	%read{7,55} %write{7,55}
temp	float	$tmp14	%read{7,55} %write{7,55}
temp	float	$tmp15	%read{7,55} %write{7,55}
temp	float	$tmp16	%read{7,55} %write{7,55}
temp	float	$tmp17	%read{7,55} %write{7,55}
temp	float	$tmp18	%read{7,55} %write{7,55}
temp	float	$tmp19	%read{7,55} %write{7,55}
temp	float	$tmp20	%read{7,55} %write{7,55}
temp	float	$tmp21	%read{7,55} %write{7,55}
temp	float	$tmp22	%read{7,55} %write{7,55}
const	int	$const11	10		%read{31,31} %write{2147483647,-1}
temp	int	$tmp23	%read{7,55} %write{7,55}
temp	float	$tmp24	%read{7,55} %write{7,55}
temp	float	$tmp25	%read{7,55} %write{7,55}
temp	float	$tmp26	%read{7,55} %write{7,55}
temp	float	$tmp27	%read{7,55} %write{7,55}
temp	float	$tmp28	%read{7,55} %write{7,55}
temp	float	$tmp29	%read{7,55} %write{7,55}
temp	float	$tmp30	%read{7,55} %write{7,55}
temp	float	$tmp31	%read{7,55} %write{7,55}
temp	float	$tmp32	%read{7,55} %write{7,55}
temp	float	$tmp33	%read{7,55} %write{7,55}
temp	float	$tmp34	%read{7,55} %write{7,55}
temp	float	$tmp35	%read{7,55} %write{7,55}
temp	float	$tmp36	%read{7,55} %write{7,55}
temp	float	$tmp37	%read{7,55} %write{7,55}
temp	float	$tmp38	%read{7,55} %write{7,55}
temp	float	$tmp39	%read{7,55} %write{7,55}
temp	float	$tmp40	%read{7,55} %write{7,55}
temp	float	$tmp41	%read{7,55} %write{7,55}
temp	int	$tmp42	%read{2147483647,-1} %write{7,55}
temp	float	$tmp43	%read{59,59} %write{58,58}
const	float	$const12	3		%read{57,62} %write{2147483647,-1}
temp	float	$tmp44	%read{57,57} %write{56,56}
temp	float	$tmp45	%read{58,58} %write{57,57}
temp	float	$tmp46	%read{60,60} %write{59,59}
temp	float	$tmp47	%read{72,72} %write{60,60}
temp	float	$tmp48	%read{64,64} %write{63,63}
temp	float	$tmp49	%read{62,62} %write{61,61}
temp	float	$tmp50	%read{63,63} %write{62,62}
temp	float	$tmp51	%read{65,65} %write{64,64}
temp	float	$tmp52	%read{72,72} %write{65,65}
temp	float	$tmp53	%read{70,70} %write{69,69}
temp	float	$tmp54	%read{68,68} %write{66,66}
temp	float	$tmp55	%read{68,68} %write{67,67}
temp	float	$tmp56	%read{69,69} %write{68,68}
temp	float	$tmp57	%read{71,71} %write{70,70}
temp	float	$tmp58	%read{72,72} %write{71,71}
code ___main___
# colours.osl:15
#         int   complexity      = 47;    // More points of color.
	assign		complexity $const1 	%filename{"colours.osl"} %line{15} %argrw{"wr"}
# colours.osl:16
#         float fluid_speed     = 108.0;  // Drives speed, higher number will make it slower.
	assign		fluid_speed $const2 	%line{16} %argrw{"wr"}
# colours.osl:17
#         float clrInt = 0.8;
	assign		clrInt $const3 	%line{17} %argrw{"wr"}
# colours.osl:19
#     vector p=vector(u,v,0);
	vector		p u v $const5 	%line{19} %argrw{"wrrr"}
# colours.osl:20
#     p = P / scale;
	div		p P scale 	%line{20} %argrw{"wrr"}
# colours.osl:21
#     for(int i=1;i<complexity;i++)
	for		$tmp2 7 9 54 56 	%line{21} %argrw{"r"}
	assign		___325_i $const6 	%argrw{"wr"}
	lt		$tmp1 ___325_i complexity 	%argrw{"wrr"}
	neq		$tmp2 $tmp1 $const4 	%argrw{"wrr"}
# colours.osl:23
#         vector newp = p + tm*0.001;
	mul		$tmp3 tm $const7 	%line{23} %argrw{"wrr"}
	add		___326_newp p $tmp3 	%argrw{"wrr"}
# colours.osl:24
#         float s=i;
	assign		___326_s ___325_i 	%line{24} %argrw{"wr"}
# colours.osl:25
#         newp[0]+=0.6/s*sin(s*p[2]+tm/fluid_speed+0.3*s) + offX; // + mouse[1]/mouse_factor+mouse_offset;
	compref		$tmp4 ___326_newp $const4 	%line{25} %argrw{"wrr"}
	div		$tmp5 $const8 ___326_s 	%argrw{"wrr"}
	compref		$tmp7 p $const9 	%argrw{"wrr"}
	mul		$tmp8 ___326_s $tmp7 	%argrw{"wrr"}
	div		$tmp9 tm fluid_speed 	%argrw{"wrr"}
	add		$tmp10 $tmp8 $tmp9 	%argrw{"wrr"}
	mul		$tmp11 $const10 ___326_s 	%argrw{"wrr"}
	add		$tmp12 $tmp10 $tmp11 	%argrw{"wrr"}
	sin		$tmp6 $tmp12 	%argrw{"wr"}
	mul		$tmp13 $tmp5 $tmp6 	%argrw{"wrr"}
	add		$tmp14 $tmp13 offX 	%argrw{"wrr"}
	add		$tmp15 $tmp4 $tmp14 	%argrw{"wrr"}
	compassign	___326_newp $const4 $tmp15 	%argrw{"wrr"}
# colours.osl:26
#         newp[1]+=0.6/s*sin(s*p[0]+tm/fluid_speed+0.3*(i+10)) - offY; // - mouse[0]/mouse_factor+mouse_offset;
	compref		$tmp16 ___326_newp $const6 	%line{26} %argrw{"wrr"}
	div		$tmp17 $const8 ___326_s 	%argrw{"wrr"}
	compref		$tmp19 p $const4 	%argrw{"wrr"}
	mul		$tmp20 ___326_s $tmp19 	%argrw{"wrr"}
	div		$tmp21 tm fluid_speed 	%argrw{"wrr"}
	add		$tmp22 $tmp20 $tmp21 	%argrw{"wrr"}
	add		$tmp23 ___325_i $const11 	%argrw{"wrr"}
	assign		$tmp25 $tmp23 	%argrw{"wr"}
	mul		$tmp24 $const10 $tmp25 	%argrw{"wrr"}
	add		$tmp26 $tmp22 $tmp24 	%argrw{"wrr"}
	sin		$tmp18 $tmp26 	%argrw{"wr"}
	mul		$tmp27 $tmp17 $tmp18 	%argrw{"wrr"}
	sub		$tmp28 $tmp27 offY 	%argrw{"wrr"}
	add		$tmp29 $tmp16 $tmp28 	%argrw{"wrr"}
	compassign	___326_newp $const6 $tmp29 	%argrw{"wrr"}
# colours.osl:27
#         newp[2]+=0.6/s*sin(s*p[1]+tm/fluid_speed+0.3*s) + offZ;
	compref		$tmp30 ___326_newp $const9 	%line{27} %argrw{"wrr"}
	div		$tmp31 $const8 ___326_s 	%argrw{"wrr"}
	compref		$tmp33 p $const6 	%argrw{"wrr"}
	mul		$tmp34 ___326_s $tmp33 	%argrw{"wrr"}
	div		$tmp35 tm fluid_speed 	%argrw{"wrr"}
	add		$tmp36 $tmp34 $tmp35 	%argrw{"wrr"}
	mul		$tmp37 $const10 ___326_s 	%argrw{"wrr"}
	add		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
	sin		$tmp32 $tmp38 	%argrw{"wr"}
	mul		$tmp39 $tmp31 $tmp32 	%argrw{"wrr"}
	add		$tmp40 $tmp39 offZ 	%argrw{"wrr"}
	add		$tmp41 $tmp30 $tmp40 	%argrw{"wrr"}
	compassign	___326_newp $const9 $tmp41 	%argrw{"wrr"}
# colours.osl:28
#         p=newp;
	assign		p ___326_newp 	%line{28} %argrw{"wr"}
# colours.osl:21
#     for(int i=1;i<complexity;i++)
	assign		$tmp42 ___325_i 	%line{21} %argrw{"wr"}
	add		___325_i ___325_i $const6 	%argrw{"wrr"}
# colours.osl:30
#     c=vector(clrInt*sin(3.0*p[0])+clrInt, clrInt*sin(3.0*p[1])+clrInt, clrInt*sin(p[0]+p[2])+clrInt);
	compref		$tmp44 p $const4 	%line{30} %argrw{"wrr"}
	mul		$tmp45 $const12 $tmp44 	%argrw{"wrr"}
	sin		$tmp43 $tmp45 	%argrw{"wr"}
	mul		$tmp46 clrInt $tmp43 	%argrw{"wrr"}
	add		$tmp47 $tmp46 clrInt 	%argrw{"wrr"}
	compref		$tmp49 p $const6 	%argrw{"wrr"}
	mul		$tmp50 $const12 $tmp49 	%argrw{"wrr"}
	sin		$tmp48 $tmp50 	%argrw{"wr"}
	mul		$tmp51 clrInt $tmp48 	%argrw{"wrr"}
	add		$tmp52 $tmp51 clrInt 	%argrw{"wrr"}
	compref		$tmp54 p $const4 	%argrw{"wrr"}
	compref		$tmp55 p $const9 	%argrw{"wrr"}
	add		$tmp56 $tmp54 $tmp55 	%argrw{"wrr"}
	sin		$tmp53 $tmp56 	%argrw{"wr"}
	mul		$tmp57 clrInt $tmp53 	%argrw{"wrr"}
	add		$tmp58 $tmp57 clrInt 	%argrw{"wrr"}
	vector		c $tmp47 $tmp52 $tmp58 	%argrw{"wrrr"}
	end
